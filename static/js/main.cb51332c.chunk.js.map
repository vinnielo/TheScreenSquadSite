{"version":3,"sources":["assets/video-1596665337.mp4","Components/nav.js","Components/logo.js","Components/about.js","Components/episodes.js","Components/footer.js","episodeData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","style","textAlign","Video","src","video1","width","height","loop","autoPlay","backgroundColor","About","Episodes","props","epData","episodeData","CardDeck","episodes","map","item","Card","Img","variant","imgUrl","Body","Title","title","Text","description","href","youtube","target","Button","Footer","className","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,8C,qKCY5BC,MAVf,WACE,OACE,6BACE,6BACI,wBAAIC,MAAO,CAACC,UAAW,WAAvB,+C,iBCcKC,MAjBf,WACE,OACE,6BACE,2BACEC,IAAKC,IACLC,MAAM,MACNC,OAAO,MACPC,MAAI,EAACC,UAAQ,EACbR,MAAO,CAACS,gBAAiB,OACjBJ,MAAO,YCDRK,MATf,WACE,OACE,6BACI,wBAAIV,MAAO,CAACC,UAAW,WAAvB,aACA,wBAAID,MAAO,CAACC,UAAW,WAAvB,yFAA4H,+B,sBC6BrHU,MA9Bf,SAAkBC,GAChB,IAAIC,EAASD,EAAME,YACnB,OACE,6BACE,wBAAId,MAAO,CAAEC,UAAW,WAAxB,aACA,kBAACc,EAAA,EAAD,KACGF,EAAOG,SAASC,KAAI,SAACC,GACpB,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMlB,IAAKe,EAAKI,SAClC,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,KAAaN,EAAKO,OAClB,kBAACN,EAAA,EAAKO,KAAN,KAAYR,EAAKS,aACzB,uBAAGC,KAAMV,EAAKW,QAASC,OAAO,UAC9B,yBAAK3B,IAAI,iGAAiG2B,OAAO,SAAS9B,MAAO,CAACK,MAAO,cAS7I,6BACA,kBAAC0B,EAAA,EAAD,uBChBSC,MATf,WACE,OACE,6BACI,kBAACb,EAAA,EAAKa,OAAN,CAAaC,UAAU,cAAa,wBAAIjC,MAAO,CAACC,UAAW,WAAvB,4CCiD7Ba,EAzDE,CACb,SAAY,CACR,CACI,KAAQ,aACR,MAAQ,qBACR,YAAe,iYACf,OAAS,mIACT,QAAW,OACX,SAAY,OACZ,IAAO,oBAKX,CACI,KAAQ,UACR,MAAQ,iBACR,YAAe,iYACf,OAAS,mIACT,QAAW,OACX,SAAY,OACZ,IAAO,oBApBH,CA0BR,CACI,KAAQ,2BACR,MAAQ,iBACR,YAAe,kcACf,OAAS,8FACT,QAAW,+BACX,MAAS,kBACT,SAAY,OACZ,IAAO,wBAlCH,CAwCR,CACI,KAAQ,UACR,MAAQ,iBACR,YAAe,iYACf,OAAS,mIACT,QAAW,OACX,SAAY,OACZ,IAAO,sBCzBJoB,MAbf,WACE,OACE,oCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUpB,YAAaA,IACvB,kBAAC,EAAD,QCLgBqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cb51332c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video-1596665337.25d5b232.mp4\";","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <div>\n      <nav> \n          <h1 style={{textAlign: \"center\"}}>Welcome to The ScreenSquad Podcast page!</h1>\n      </nav>\n    </div>\n  );\n}\n\nexport default Nav;","import React from \"react\";\nimport video1 from '../assets/video-1596665337.mp4'\n\nfunction Video() {\n  return (\n    <div>\n      <video\n        src={video1}\n        width=\"800\"\n        height=\"800\"\n        loop autoPlay\n        style={{backgroundColor: \"#000\",\n                width: \"100%\"}}\n        \n      />\n      \n    </div>\n  );\n}\n\nexport default Video;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div>\n        <h1 style={{textAlign: \"center\"}}>The Hosts</h1>\n        <h3 style={{textAlign: \"center\"}}>We are a rag tagged group of brothers that love to watch movies and talk about them. </h3><hr/>\n    </div>\n  );\n}\n\nexport default About;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Episodes(props) {\n  let epData = props.episodeData;\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>EPISODES:</h1>\n      <CardDeck>\n        {epData.episodes.map((item) => {\n          return (\n            <>\n              <Card>\n                <Card.Img variant=\"top\" src={item.imgUrl} />\n                <Card.Body>\n                  <Card.Title>{item.title}</Card.Title>\n                  <Card.Text>{item.description}</Card.Text>\n          <a href={item.youtube} target=\"_blank\" >\n          <img src=\"https://github.com/vinnielo/TheScreenSquadSite/blob/master/src/assets/yt_icon_rgb.png?raw=true\" target=\"_blank\" style={{width: 50}}/></a>\n                   \n                  \n                </Card.Body>\n              </Card>\n            </>\n          );\n        })}\n      </CardDeck>\n      <br />\n      <Button>All Episodes</Button>\n    </div>\n  );\n}\n\nexport default Episodes;\n","import React from \"react\";\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction Footer() {\n  return (\n    <div>\n        <Card.Footer className=\"text-muted\"><h3 style={{textAlign: \"center\"}} > Copyright TheScreenSquadPodcast 2019</h3></Card.Footer>\n        \n    </div>\n  );\n}\n\nexport default Footer;\n","let episodeData= {\n    \"episodes\": [\n        {\n            \"name\": \"Episode 93\",\n            \"title\":\"CLASH AT DEMONHEAD\",\n            \"description\": \"Welcome to the ScreenSquad Podcast. on this episode we get hard over the long anticipated film Freddy vs Jason. (Spoiler: both of their mothers are named Martha) Plus, the rumors of a potential sequel that may not happen. Like and subscribe to the ScreenSquad Podcast on Facebook Instagram Twitter and YouTube. Leave a comment or just a request for future episodes. Ozzie may reply.\",\n            \"imgUrl\":\"https://github.com/vinnielo/TheScreenSquadSite/blob/master/src/assets/9AA5A3E0-7FD4-45F7-828A-02CCCF358265_1_105_c.jpeg?raw=true\",\n            \"Youtube\": \"test\",\n            \"applePod\": \"test\",\n            \"alt\": \"Freddy Vs. Jason\"\n            // \"googlePlay\": \"\",\n            // \"spotify\": \"\",\n\n        },\n        {\n            \"name\": \"Test 93\",\n            \"title\":\"test DEMONHEAD\",\n            \"description\": \"Welcome to the ScreenSquad Podcast. on this episode we get hard over the long anticipated film Freddy vs Jason. (Spoiler: both of their mothers are named Martha) Plus, the rumors of a potential sequel that may not happen. Like and subscribe to the ScreenSquad Podcast on Facebook Instagram Twitter and YouTube. Leave a comment or just a request for future episodes. Ozzie may reply.\",\n            \"imgUrl\":\"https://github.com/vinnielo/TheScreenSquadSite/blob/master/src/assets/9AA5A3E0-7FD4-45F7-828A-02CCCF358265_1_105_c.jpeg?raw=true\",\n            \"Youtube\": \"test\",\n            \"applePod\": \"test\",\n            \"alt\": \"Freddy Vs. Jason\"\n            // \"googlePlay\": \"\",\n            // \"spotify\": \"\",\n\n        },\n        ,\n        {\n            \"name\": \"The Island of Dr. Moreau\",\n            \"title\":\"Garbage Island\",\n            \"description\": \"Welcome to the ScreenSquad Podcast. On this episode we talk about the goings on with a film that is so bad that there is a documentary about it, that is interesting. Yes, we dive into the island of Dr Moreau. Holy shit. This is a shit show of a film. Make sure to like and subscribe on our Facebook, Instagram, Twitter and YouTube pages. Leave a comment below and know that Ozzie replies so bad that he couldn't host the Oscars even if they asked.\",\n            \"imgUrl\":\"https://github.com/vinnielo/TheScreenSquadSite/blob/master/src/assets/IMG_3576.JPG?raw=true\",\n            \"youtube\": \"https://youtu.be/Uks0ZAv4e3o\",\n            \"yIcon\": \"./assets/Yt.png\",\n            \"applePod\": \"test\",\n            \"alt\": \"Island of Dr. Moreau\"\n            // \"googlePlay\": \"\",\n            // \"spotify\": \"\",\n\n        },\n        ,\n        {\n            \"name\": \"Test 93\",\n            \"title\":\"test DEMONHEAD\",\n            \"description\": \"Welcome to the ScreenSquad Podcast. on this episode we get hard over the long anticipated film Freddy vs Jason. (Spoiler: both of their mothers are named Martha) Plus, the rumors of a potential sequel that may not happen. Like and subscribe to the ScreenSquad Podcast on Facebook Instagram Twitter and YouTube. Leave a comment or just a request for future episodes. Ozzie may reply.\",\n            \"imgUrl\":\"https://github.com/vinnielo/TheScreenSquadSite/blob/master/src/assets/9AA5A3E0-7FD4-45F7-828A-02CCCF358265_1_105_c.jpeg?raw=true\",\n            \"Youtube\": \"test\",\n            \"applePod\": \"test\",\n            \"alt\": \"Freddy Vs. Jason\"\n            // \"googlePlay\": \"\",\n            // \"spotify\": \"\",\n\n        },\n    ]\n\n}\n\nexport default episodeData;","import React from 'react';\n\nimport './App.css';\nimport Nav from './Components/nav'\nimport Video from './Components/logo'\nimport About from './Components/about'\nimport Episodes from './Components/episodes'\nimport Footer from './Components/footer'\nimport episodeData from './episodeData'\n\nfunction App() {\n  return (\n    <>\n    <Nav />\n    <Video/>  \n    <About />\n    <Episodes episodeData={episodeData}/>\n    <Footer />\n  \n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}